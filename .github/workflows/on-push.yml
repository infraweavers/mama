name: Test, Build and Release

on: [push]

jobs:

  test:
    strategy:
      matrix:
        go-version: [1.15.x, 1.16.x]

      runs-on: ubuntu-latest

      steps:
      
        - name: Install Go
          uses: actions/setup-go@v2
          with:
            go-version: ${{ matrix.go-version }}
              
        - name: Checkout code
          uses: actions/checkout@v2
          with:
            path: ${{ env.SRCPATH }}
  
        - name: Run Tests
          run: |
            pushd ${{ env.SRCPATH }}
            GO111MODULE=on GOOS=$os GOARCH=$arch go get ./...
            GO111MODULE=on go test -cover ./...

  build-release:
    strategy:
      matrix:
        go-version: [1.15.x, 1.16.x]
        os: [linux, windows, freebsd]
        arch: [386, amd64]

    runs-on: ubuntu-latest

    env:
        GOPATH: ${{ github.workspace }}/go
        SRCPATH: ${{ github.workspace }}/go/src/mama

    steps:

      - name: Get current time
        uses: gerred/actions/current-time@master
        id: current-time
        
      - uses: benjlevesque/short-sha@v1.2
        id: short-sha
        with:
          length: 7

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
            
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          path: ${{ env.SRCPATH }}

      - name: Dependencies & Build
        run: |
          os=${{ matrix.os }}
          arch=${{ matrix.arch }}
          goversion=${{ matrix.go-version }}

          echo "Building $os-$arch-$goversion"
          
          suffix=$([ "$os" == "windows" ] && echo ".exe" || echo "")

          mkdir -p ./release/$os-$arch-$goversion
          cp ${{ env.SRCPATH }}/installService.cmd ${{ env.SRCPATH }}/configuration.ini ${{ env.SRCPATH }}/LICENSE ${{ env.SRCPATH }}/server.crt ${{ env.SRCPATH }}/server.key ${{ env.SRCPATH }}/README.md ./release/$os-$arch-$goversion
          
          pushd ${{ env.SRCPATH }}
          
          GO111MODULE=on GOOS=$os GOARCH=$arch go get ./...
          GO111MODULE=on GOOS=$os GOARCH=$arch go build -o ${{ env.SRCPATH }}/monitoring-agent$suffix

          popd

          cp ${{ env.SRCPATH }}/monitoring-agent$suffix ./release/$os-$arch-$goversion/monitoring-agent$suffix
      
      - name: upload builds
        uses: actions/upload-artifact@v2
        with:
          name: "${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.go-version }}-${{ steps.short-sha.outputs.sha }}"
          path: release/

