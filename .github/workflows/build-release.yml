name: Build and release

on: [push]

jobs:
  build-release:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
      
      - name: Debug
        run: |
          echo ${GOPATH}
          echo ${GOROOT}
          echo ${GOCACHE}
          echo ${GOENV}
          
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          path: go/src/mama

      - name: Dependencies
        run: go get ./...
        env:
          GOPATH: /home/runner/work/mama/mama/go

      - name: build linux 386
        run: GOOS=linux GOARCH=386 go build -o linux-386 cmd/mamasrv/mamasrv.go
        env:
          GOPATH: /home/runner/work/mama/mama/go
      
      - name: build linux amd64
        run: GOOS=linux GOARCH=amd64 go build -o linux-amd64 cmd/mamasrv/mamasrv.go
        env:
          GOPATH: /home/runner/work/mama/mama/go
        
      - name: build windows 386
        run: GOOS=windows GOARCH=386 go build -o windows-386.exe cmd\mamasrv\mamasrv.go
        env:
          GOPATH: /home/runner/work/mama/mama/go
        
      - name: build windows amd64
        run: GOOS=windows GOARCH=amd64 go build -o windows-amd64.exe cmd\mamasrv\mamasrv.go
        env:
          GOPATH: /home/runner/work/mama/mama/go

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: ${{ github.sha }}
          release_name: "${{github.sha}}"
          prerelease: true
          draft: true
      
      - name: Upload Asset linux-386
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux-386
          asset_name: "release-linux-386"
          asset_content_type: application/executable

      - name: Upload Asset linux-amd64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux-amd64
          asset_name: "release-linux-amd64"
          asset_content_type: application/executable

      - name: Upload Asset windows-386.exe
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows-386.exe
          asset_name: "release-windows-386"
          asset_content_type: application/executable

      - name: Upload Asset windows-amd64.exe
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows-amd64.exe
          asset_name: "release-windows-amd64"
          asset_content_type: application/executable
